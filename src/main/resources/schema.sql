DROP TABLE IF EXISTS films_genres;
DROP TABLE IF EXISTS films_likes;
DROP TABLE IF EXISTS films;

CREATE TABLE films
(
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        name VARCHAR NOT NULL,
        description VARCHAR(200),
        release_date DATE,
        duration INTEGER NOT NULL,
        mpa_id INTEGER NOT NULL
);

DROP TABLE IF EXISTS friends;
DROP TABLE IF EXISTS users;
CREATE TABLE users
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR NOT NULL,
    login VARCHAR NOT NULL,
    name VARCHAR,
    birthday DATE
);

CREATE TABLE friends
(
    inviter INTEGER REFERENCES users (id),
    invitee INTEGER REFERENCES users (id),
    status bool,
    CONSTRAINT friends_pk PRIMARY KEY (inviter, invitee)
);

CREATE TABLE films_likes
(
    film_id INTEGER REFERENCES films (id),
        user_id INTEGER REFERENCES users (id),
        emoji ENUM('LIKE') NOT NULL,
        CONSTRAINT likes_pk PRIMARY KEY (film_id, user_id)
);

DROP TABLE IF EXISTS genres;
CREATE TABLE genres
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        name VARCHAR(50)
);

CREATE TABLE films_genres
(
    genres_id INTEGER REFERENCES genres (id),
        film_id INTEGER REFERENCES films (id),
        CONSTRAINT film_genre_pk PRIMARY KEY (genres_id, film_id)
);

DROP TABLE IF EXISTS mpa;
CREATE TABLE mpa
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        name VARCHAR(20)
);
